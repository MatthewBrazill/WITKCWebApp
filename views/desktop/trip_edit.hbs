<script hidden>
    $(document).ready(() => {

        $.ajax({
            url: '/api/members/list',
            method: 'GET',
            success: (members) => {
                $('#trip_form').attr('class', 'ui form')
                $('#start_calendar').calendar({
                    selectAdjacentDays: true,
                    firstDayOfWeek: 1,
                    type: 'date',
                    minDate: new Date(),
                    initialDate: new Date('{{trip.startDate}}'),
                    endCalendar: $('#end_calendar'),
                    onChange: () => {
                        const start = $('#startDate')
                        const startDate = $('#start_calendar').calendar('get date')
                        const startField = $('#start_calendar').parent()
                        if (startDate == null) {
                            startField.attr('class', 'field error')
                            start.prop('date', '')
                            start.prop('valid', false)
                        } else {
                            startField.attr('class', 'field success')
                            start.prop('date', startDate)
                            start.prop('valid', true)
                        }
                    }
                })
                $('#end_calendar').calendar({
                    selectAdjacentDays: true,
                    firstDayOfWeek: 1,
                    type: 'date',
                    minDate: new Date(),
                    initialDate: new Date('{{trip.endDate}}'),
                    startCalendar: $('#start_calendar'),
                    onChange: () => {
                        const end = $('#endDate')
                        const endDate = $('#end_calendar').calendar('get date')
                        const endField = $('#end_calendar').parent()
                        if (endDate === null) {
                            endField.attr('class', 'field error')
                            end.prop('date', '')
                            end.prop('valid', false)
                        } else {
                            endField.attr('class', 'field success')
                            end.prop('date', endDate)
                            end.prop('valid', true)
                        }
                    }
                })

                $('#delete').click(() => {
                    $.ajax({
                        url: '/api/trip/delete',
                        method: 'POST',
                        data: { tripId: '{{trip.tripId}}' },
                        success: () => window.location = '/profile/me',
                        error: () => $('#trip_form').attr('class', 'ui error form')
                    })
                })

                $('#trip_form').on('submit', (event) => {
                    event.preventDefault()
                    const form = $('#trip_form')
                    const inputs = $('form#trip_form input[type!=button][class!=search], textarea')
                    var valid = true

                    inputs.trigger('change')
                    inputs.each((index, element) => {
                        var input = $(element)
                        if (!input.prop('valid') && input.attr('type') != 'checkbox') valid = false
                    })

                    if (!valid) form.attr('class', 'ui error form')
                    else {
                        form.attr('class', 'ui loading form')
                        var data = { tripId: '{{trip.tripId}}', hazards: [] }
                        inputs.each((index, element) => {
                            var input = $(element)
                            if (input.attr('type') == 'checkbox') {
                                if (input.attr('id') == 'enoughSafety') data.enoughSafety = input.prop('checked')
                                else if (input.attr('id') == 'other_hazards_checkbox' && input.prop('checked')) data.hazards.push($('#other_hazards').val())
                                else if (input.prop('checked')) data.hazards.push(input.attr('id'))
                            } else if (input.attr('id').includes('Date')) data[input.attr('id')] = new Date(input.prop('date')).toISOString()
                            else if (input.attr('id') != 'other_hazards') data[input.attr('id')] = input.val()
                        })
                        $.ajax({
                            url: '/api/trip/update',
                            method: 'POST',
                            data: data,
                            success: (res) => window.location = res.url,
                            error: () => form.attr('class', 'ui error form')
                        })
                    }
                })

                $('#tripName').on('input change', () => {
                    const name = $('#tripName')
                    const field = name.parent()
                    if (!name.val().match(/^[\p{L}\d!?&() ]{1,64}$/u)) {
                        field.attr('class', 'field error')
                        name.prop('valid', false)
                    } else {
                        field.attr('class', 'field success')
                        name.prop('valid', true)
                    }
                })

                $('#description').on('input change', () => {
                    const description = $('#description')
                    const field = description.parent()
                    if (!description.val().match(/^[^<>]{1,500}$/u)) {
                        field.attr('class', 'field error')
                        description.prop('valid', false)
                    } else {
                        field.attr('class', 'field success')
                        description.prop('valid', true)
                    }
                })

                $('#lineOne').on('input change', () => {
                    const line = $('#lineOne')
                    const field = line.parent()
                    if (!line.val().match(/^[\w-\.,' ]{1,32}$/)) {
                        field.attr('class', 'field error')
                        line.prop('valid', false)
                    } else {
                        field.attr('class', 'field success')
                        line.prop('valid', true)
                    }
                })

                $('#lineTwo').on('input change', () => {
                    const line = $('#lineTwo')
                    const field = line.parent()
                    if (line.val() == '') {
                        field.attr('class', 'field')
                        line.prop('valid', true)
                    } else if (!line.val().match(/^[\w-\.,' ]{1,32}$/)) {
                        field.attr('class', 'field error')
                        line.prop('valid', false)
                    } else {
                        field.attr('class', 'field success')
                        line.prop('valid', true)
                    }
                })

                $('#city').on('input change', () => {
                    const city = $('#city')
                    const field = city.parent()
                    if (!city.val().match(/^[\w- ]{1,32}$/)) {
                        field.attr('class', 'field error')
                        city.prop('valid', false)
                    } else {
                        field.attr('class', 'field success')
                        city.prop('valid', true)
                    }
                })

                $('#county_dropdown').dropdown()
                $('#county').on('input change', () => {
                    const county = $('#county')
                    const field = county.parent().parent()
                    var counties = [
                        'antrim', 'armagh', 'carlow', 'cavan', 'clare', 'cork', 'derry', 'donegal', 'down',
                        'dublin', 'fermanagh', 'galway', 'kerry', 'kildare', 'kilkenny', 'laois', 'leitrim',
                        'limerick', 'longford', 'louth', 'mayo', 'meath', 'monaghan', 'offaly', 'roscommon',
                        'sligo', 'tipperary', 'tyrone', 'waterford', 'westmeath', 'wexford', 'wicklow'
                    ]

                    if (!counties.includes(county.val())) {
                        field.attr('class', 'ten wide field error')
                        county.prop('valid', false)
                    } else {
                        field.attr('class', 'ten wide field success')
                        county.prop('valid', true)
                    }
                })

                $('#code').on('input change', () => {
                    const code = $('#code')
                    const field = code.parent()
                    if (!code.val().match(/^[a-z0-9]{3}[ ]?[a-z0-9]{4}$/i) && !code.val().match(/^[a-z0-9]{2,4}[ ]?[a-z0-9]{3}$/i)) {
                        field.attr('class', 'six wide field error')
                        code.prop('valid', false)
                    } else {
                        field.attr('class', 'six wide field success')
                        code.prop('valid', true)
                    }
                })

                $('#skillLevel_dropdown').dropdown()
                $('#skillLevel').on('input change', () => {
                    const skillLevel = $('#skillLevel')
                    const field = skillLevel.parent().parent()

                    if (skillLevel.val() < 1 || skillLevel.val() > 5 || skillLevel.val() == '') {
                        field.attr('class', 'field error')
                        skillLevel.prop('valid', false)
                    } else {
                        field.attr('class', 'field success')
                        skillLevel.prop('valid', true)
                    }
                })

                var values = []
                var memberIds = []
                for (var member of members) {
                    memberIds.push(member.memberId)
                    values.push({
                        name: `${member.firstName} ${member.lastName}`,
                        value: member.memberId,
                        image: member.img,
                    })
                }
                $('#safety_dropdown').dropdown({
                    match: 'text',
                    fullTextSearch: 'exact',
                    ignoreDiacritics: 'true',
                    className: {
                        image: 'ui avatar image'
                    },
                    values: values
                })
                $('#safety').on('input change', () => {
                    const safety = $('#safety')
                    const field = safety.parent().parent()
                    if (!safety.val().split(',').every(item => memberIds.includes(item))) {
                        field.attr('class', 'field error')
                        safety.prop('valid', false)
                    } else {
                        field.attr('class', 'field success')
                        safety.prop('valid', true)
                    }
                })

                $('#enoughSafety').on('input change', () => {
                    const box = $('#enoughSafety')

                    if (!box.prop('checked')) box.siblings().text(`No (This does not mean your trip will be denied! We will try to find additional safety boaters for your trip.)`)
                    else box.siblings().text('Yes')
                })
                $('#enoughSafety').trigger('change')

                $('#other_hazards_checkbox').on('input change', () => {
                    const box = $('#other_hazards_checkbox')
                    const text = $('#other_hazards')

                    if (!box.prop('checked')) {
                        text.attr('disabled', true)
                        text.val('')
                    } else text.attr('disabled', false)
                    text.trigger('change')
                })

                $('#other_hazards').on('input change', () => {
                    const text = $('#other_hazards')
                    const field = text.parent()

                    if ($('#other_hazards_checkbox').prop('checked')) {
                        if (!text.val().match(/^[\w- ,]{1,24}$/)) {
                            field.attr('class', 'field error')
                            text.prop('valid', false)
                        } else {
                            field.attr('class', 'field success')
                            text.prop('valid', true)
                        }
                    } else {
                        field.attr('class', 'field')
                        text.prop('valid', true)
                    }
                })

                $('#safety_dropdown').dropdown('set exactly', [{{{trip.safety}}}])
                $('form#trip_form input[type!=button][class!=search], textarea').trigger('change')
            },
            error: () => { form.attr('class', 'ui error form') }
        })
    })
</script>
<div class="twelve wide column">

    <div class="ui segment">

        <h1 class="ui center aligned header">Edit Trip</h1>

        <form class="ui loading form" id="trip_form" autocomplete="off">

            <!-- Name -->
            <div class="field">
                <label>Trip Name</label>
                <input type="text" id="tripName" placeholder="Trip Name" value="{{trip.tripName}}">
            </div>
            <div class="four fields">

                <!-- Start -->
                <div class="field">
                    <label>From</label>
                    <div class="ui calendar" id="start_calendar">
                        <div class="ui input left icon">
                            <i class="calendar icon"></i>
                            <input type="text" id="startDate" placeholder="Start Date">
                        </div>
                    </div>
                </div>

                <!-- End -->
                <div class="field">
                    <label>To</label>
                    <div class="ui calendar" id="end_calendar">
                        <div class="ui input left icon">
                            <i class="calendar icon"></i>
                            <input type="text" id="endDate" placeholder="End Date">
                        </div>
                    </div>
                </div>
            </div>

            <div class="ui two column grid">

                <div class="ui column">

                    <!-- ===Description=== -->
                    <h4 class="ui dividing header">Description</h4>
                    <div class="field">
                        <textarea style="height:194px" id="description" placeholder="Description..." maxlength="500">{{trip.description}}</textarea>
                    </div>
                </div>

                <!-- ===Location=== -->
                <div class="ui column" id="address_location">

                    <h4 class="ui dividing header">Location - Address</h4>

                    <!-- Line one -->
                    <div class="field">
                        <input type="text" id="lineOne" placeholder="First Line" value="{{trip.destination.lineOne}}">
                    </div>

                    <!-- Line two -->
                    <div class="field">
                        <input type="text" id="lineTwo" placeholder="Second Line" value="{{trip.destination.lineTwo}}">
                    </div>

                    <!-- City -->
                    <div class="field">
                        <input type="text" id="city" placeholder="City" value="{{trip.destination.city}}">
                    </div>
                    <div class="fields">

                        <!-- County -->
                        <div class="ten wide field">
                            <div class="ui search selection dropdown" id="county_dropdown">
                                <input type="hidden" id="county" value="{{trip.destination.county}}">
                                <div class="default text">Select County...</div>
                                <div class="menu">
                                    <div class="item" data-value="antrim">Antrim</div>
                                    <div class="item" data-value="armagh">Armagh</div>
                                    <div class="item" data-value="carlow">Carlow</div>
                                    <div class="item" data-value="cavan">Cavan</div>
                                    <div class="item" data-value="clare">Clare</div>
                                    <div class="item" data-value="cork">Cork</div>
                                    <div class="item" data-value="derry">Derry</div>
                                    <div class="item" data-value="donegal">Donegal</div>
                                    <div class="item" data-value="down">Down</div>
                                    <div class="item" data-value="dublin">Dublin</div>
                                    <div class="item" data-value="fermanagh">Fermanagh</div>
                                    <div class="item" data-value="galway">Galway</div>
                                    <div class="item" data-value="kerry">Kerry</div>
                                    <div class="item" data-value="kildare">Kildare</div>
                                    <div class="item" data-value="kilkenny">Kilkenny</div>
                                    <div class="item" data-value="laois">Laois</div>
                                    <div class="item" data-value="leitrim">Leitrim</div>
                                    <div class="item" data-value="limerick">Limerick</div>
                                    <div class="item" data-value="longford">Longford</div>
                                    <div class="item" data-value="louth">Louth</div>
                                    <div class="item" data-value="mayo">Mayo</div>
                                    <div class="item" data-value="meath">Meath</div>
                                    <div class="item" data-value="monaghan">Monaghan</div>
                                    <div class="item" data-value="offaly">Offaly</div>
                                    <div class="item" data-value="roscommon">Roscommon</div>
                                    <div class="item" data-value="sligo">Sligo</div>
                                    <div class="item" data-value="tipperary">Tipperary</div>
                                    <div class="item" data-value="tyrone">Tyrone</div>
                                    <div class="item" data-value="waterford">Waterford</div>
                                    <div class="item" data-value="westmeath">Westmeath</div>
                                    <div class="item" data-value="wexford">Wexford</div>
                                    <div class="item" data-value="wicklow">Wicklow</div>
                                </div>
                                <i class="dropdown icon"></i>
                            </div>
                        </div>

                        <!-- Post code -->
                        <div class="six wide field">
                            <input type="text" id="code" placeholder="Post Code" value="{{trip.destination.code}}">
                        </div>
                    </div>
                </div>

                <!--
                <div class="ui column" id="coord_location">

                    <h4 class="ui dividing header">Location - Coordinates</h4>

                    <div class="field">
                        <input type="text" id="lineOne" placeholder="North/South Coordinates">
                    </div>

                    <div class="field">
                        <input type="text" id="lineTwo" placeholder="East/West Coordinates">
                    </div>
                </div>
                -->
            </div>



            <!-- ===Safety=== -->
            <h4 class="ui dividing header">Safety Concerns</h4>
            <div class="ui two column grid">
                <div class="ui column">

                    <!-- Skill Level -->
                    <div class="field">
                        <label>Minimum Skill Level</label>
                        <div class="ui selection dropdown" id="skillLevel_dropdown">
                            <input type="hidden" id="skillLevel" value="{{trip.skillLevel}}">
                            <div class="default text">Select Minimum Skill Level</div>
                            <div class="menu">
                                <div class="item" data-value="1">Level 1</div>
                                <div class="item" data-value="2">Level 2</div>
                                <div class="item" data-value="3">Level 3</div>
                                <div class="item" data-value="4">Level 4</div>
                                <div class="item" data-value="5">Level 5</div>
                            </div>
                            <i class="dropdown icon"></i>
                        </div>
                    </div>

                    <!-- Safety Boaters -->
                    <div class="field">
                        <label>Who is running safety?</label>
                        <div class="ui fluid multiple search selection dropdown" id="safety_dropdown">
                            <input type="hidden" id="safety">
                            <div class="text"></div>
                            <i class="dropdown icon"></i>
                        </div>
                    </div>

                    <!-- Safety Reasoning -->
                    <div class="field">
                        <label>
                            Do you think this is enough safety?
                        </label>
                        <div class="ui toggle checkbox">
                            <input type="checkbox" id="enoughSafety" {{{trip.enoughSafety}}}>
                            <label id="enoughSafety_text"></label>
                        </div>
                    </div>
                </div>

                <!-- Safety Checklist -->
                <div class="ui column">
                    <p style="font-weight: 700">We will probably be encountering the following hazards:</p>

                    <!-- Strainers -->
                    <div class="field">
                        <div class="ui checkbox">
                            <input type="checkbox" id="strainers" {{{trip.hazards.strainers}}}>
                            <label>Strainers and/or Sweepers</label>
                        </div>
                    </div>

                    <!-- Waterfalls -->
                    <div class="field">
                        <div class="ui checkbox">
                            <input type="checkbox" id="falls" {{{trip.hazards.falls}}}>
                            <label>Waterfalls and/or Other Drops</label>
                        </div>
                    </div>

                    <!-- Dams -->
                    <div class="field">
                        <div class="ui checkbox">
                            <input type="checkbox" id="dams" {{{trip.hazards.dams}}}>
                            <label>Dams and/or Spillways</label>
                        </div>
                    </div>

                    <!-- Undercuts -->
                    <div class="field">
                        <div class="ui checkbox">
                            <input type="checkbox" id="undercuts" {{{trip.hazards.undercuts}}}>
                            <label>Undercut Riverbanks/Ledges</label>
                        </div>
                    </div>

                    <!-- Others -->
                    <div class="field">
                        <div class="ui checkbox">
                            <input type="checkbox" id="other_hazards_checkbox" {{{trip.hazards.others}}}>
                            <label>Other notable Hazards:</label>
                        </div>
                    </div>
                    <div class="field">
                        <input type="text" id="other_hazards" placeholder="Other Hazards (Please Describe)" value="{{trip.hazards.othersValue}}" disabled>
                    </div>
                </div>
            </div>
            <br>

            <!-- Error -->
            <div class="ui error message">
                <div class="header">Couldn't edit trip!</div>
                <p>Red fields are required! Please check your input!</p>
            </div>
            <div class="fluid ui buttons">
                <div class="negative ui button" id="delete">Delete Trip</div>
                <button class="positive ui button" type="submit">Save Trip</button>
            </div>
        </form>
    </div>
</div>

{{> sidebar}}